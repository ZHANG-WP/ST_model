# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\User\Desktop\QT_complet\test0301.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1512, 916)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 1511, 851))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.frame.setFont(font)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.background = QtWidgets.QLabel(self.frame)
        self.background.setGeometry(QtCore.QRect(-10, 0, 201, 861))
        self.background.setStyleSheet("")
        self.background.setText("")
        self.background.setPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/截圖 2023-05-13 下午5.37.00.png"))
        self.background.setObjectName("background")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 10, 191, 591))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.layoutWidget = QtWidgets.QWidget(self.page)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 40, 151, 181))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.btn_cropdicom = QtWidgets.QPushButton(self.layoutWidget)
        self.btn_cropdicom.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_cropdicom.setFont(font)
        self.btn_cropdicom.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #9d0208;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_cropdicom.setObjectName("btn_cropdicom")
        self.verticalLayout.addWidget(self.btn_cropdicom)
        self.btn_resampledicom = QtWidgets.QPushButton(self.layoutWidget)
        self.btn_resampledicom.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_resampledicom.setFont(font)
        self.btn_resampledicom.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #9d0208;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_resampledicom.setObjectName("btn_resampledicom")
        self.verticalLayout.addWidget(self.btn_resampledicom)
        self.btn_dicom2nii = QtWidgets.QPushButton(self.layoutWidget)
        self.btn_dicom2nii.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_dicom2nii.setFont(font)
        self.btn_dicom2nii.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #9d0208;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_dicom2nii.setObjectName("btn_dicom2nii")
        self.verticalLayout.addWidget(self.btn_dicom2nii)
        self.btn_nii2dicom = QtWidgets.QPushButton(self.layoutWidget)
        self.btn_nii2dicom.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_nii2dicom.setFont(font)
        self.btn_nii2dicom.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #9d0208;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_nii2dicom.setObjectName("btn_nii2dicom")
        self.verticalLayout.addWidget(self.btn_nii2dicom)
        self.label_dicomprocess = QtWidgets.QLabel(self.page)
        self.label_dicomprocess.setGeometry(QtCore.QRect(20, 10, 151, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_dicomprocess.sizePolicy().hasHeightForWidth())
        self.label_dicomprocess.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_dicomprocess.setFont(font)
        self.label_dicomprocess.setStyleSheet("color: white;")
        self.label_dicomprocess.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_dicomprocess.setObjectName("label_dicomprocess")
        self.label_6 = QtWidgets.QLabel(self.page)
        self.label_6.setGeometry(QtCore.QRect(20, 250, 151, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: white;")
        self.label_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.layoutWidget_2 = QtWidgets.QWidget(self.page)
        self.layoutWidget_2.setGeometry(QtCore.QRect(20, 280, 151, 81))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.layoutWidget_2)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.btn_viewdicom = QtWidgets.QPushButton(self.layoutWidget_2)
        self.btn_viewdicom.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_viewdicom.setFont(font)
        self.btn_viewdicom.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #dc2f02;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_viewdicom.setObjectName("btn_viewdicom")
        self.verticalLayout_6.addWidget(self.btn_viewdicom)
        self.btn_viewnii = QtWidgets.QPushButton(self.layoutWidget_2)
        self.btn_viewnii.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_viewnii.setFont(font)
        self.btn_viewnii.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #dc2f02;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_viewnii.setObjectName("btn_viewnii")
        self.verticalLayout_6.addWidget(self.btn_viewnii)
        self.label_3Dmodel = QtWidgets.QLabel(self.page)
        self.label_3Dmodel.setGeometry(QtCore.QRect(20, 400, 151, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3Dmodel.sizePolicy().hasHeightForWidth())
        self.label_3Dmodel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3Dmodel.setFont(font)
        self.label_3Dmodel.setStyleSheet("color: white;")
        self.label_3Dmodel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3Dmodel.setObjectName("label_3Dmodel")
        self.layoutWidget_3 = QtWidgets.QWidget(self.page)
        self.layoutWidget_3.setGeometry(QtCore.QRect(20, 430, 151, 121))
        self.layoutWidget_3.setObjectName("layoutWidget_3")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.layoutWidget_3)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.btn_3d_reconstruction = QtWidgets.QPushButton(self.layoutWidget_3)
        self.btn_3d_reconstruction.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(99)
        self.btn_3d_reconstruction.setFont(font)
        self.btn_3d_reconstruction.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #f48c06;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_3d_reconstruction.setObjectName("btn_3d_reconstruction")
        self.verticalLayout_7.addWidget(self.btn_3d_reconstruction)
        self.btn_openmodel = QtWidgets.QPushButton(self.layoutWidget_3)
        self.btn_openmodel.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_openmodel.setFont(font)
        self.btn_openmodel.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #f48c06;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_openmodel.setObjectName("btn_openmodel")
        self.verticalLayout_7.addWidget(self.btn_openmodel)
        self.btn_smooth = QtWidgets.QPushButton(self.layoutWidget_3)
        self.btn_smooth.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(99)
        self.btn_smooth.setFont(font)
        self.btn_smooth.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #f48c06;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_smooth.setObjectName("btn_smooth")
        self.verticalLayout_7.addWidget(self.btn_smooth)
        self.background_4 = QtWidgets.QLabel(self.page)
        self.background_4.setGeometry(QtCore.QRect(8, 6, 171, 221))
        self.background_4.setStyleSheet("color: white;\n"
"background-color: #6a040f; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_4.setText("")
        self.background_4.setObjectName("background_4")
        self.background_5 = QtWidgets.QLabel(self.page)
        self.background_5.setGeometry(QtCore.QRect(10, 250, 171, 121))
        self.background_5.setStyleSheet("color: white;\n"
"background-color: #d00000; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_5.setText("")
        self.background_5.setObjectName("background_5")
        self.background_6 = QtWidgets.QLabel(self.page)
        self.background_6.setGeometry(QtCore.QRect(10, 400, 171, 161))
        self.background_6.setStyleSheet("color: white;\n"
"background-color: #e85d04; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_6.setText("")
        self.background_6.setObjectName("background_6")
        self.background_6.raise_()
        self.background_5.raise_()
        self.background_4.raise_()
        self.layoutWidget.raise_()
        self.label_dicomprocess.raise_()
        self.label_6.raise_()
        self.layoutWidget_2.raise_()
        self.label_3Dmodel.raise_()
        self.layoutWidget_3.raise_()
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.page_2)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 380, 180, 61))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.enteroutput_3D = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.enteroutput_3D.setFont(font)
        self.enteroutput_3D.setObjectName("enteroutput_3D")
        self.verticalLayout_3.addWidget(self.enteroutput_3D)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.model_path = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.model_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.model_path.setFont(font)
        self.model_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 9px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.model_path.setObjectName("model_path")
        self.horizontalLayout_5.addWidget(self.model_path)
        self.btn_model = QtWidgets.QToolButton(self.verticalLayoutWidget_2)
        self.btn_model.setObjectName("btn_model")
        self.horizontalLayout_5.addWidget(self.btn_model)
        self.verticalLayout_3.addLayout(self.horizontalLayout_5)
        self.layoutWidget1 = QtWidgets.QWidget(self.page_2)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 300, 186, 69))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.set_smooth_level = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.set_smooth_level.setFont(font)
        self.set_smooth_level.setObjectName("set_smooth_level")
        self.horizontalLayout_3.addWidget(self.set_smooth_level)
        self.smooth_level = QtWidgets.QLineEdit(self.layoutWidget1)
        self.smooth_level.setMinimumSize(QtCore.QSize(20, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.smooth_level.setFont(font)
        self.smooth_level.setStyleSheet("QLineEdit {\n"
"    text-align: center;\n"
"    font-family: \"Arial\";\n"
"    font-size: 15px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit::focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}")
        self.smooth_level.setObjectName("smooth_level")
        self.horizontalLayout_3.addWidget(self.smooth_level)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.horizontalSlider_smooth_level = QtWidgets.QSlider(self.layoutWidget1)
        self.horizontalSlider_smooth_level.setEnabled(True)
        self.horizontalSlider_smooth_level.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #e63946;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 20px;\n"
"    margin: -5px 0;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #e76f51;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #e5e5e5;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌背景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #ffb4a2;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_smooth_level.setMaximum(100)
        self.horizontalSlider_smooth_level.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_smooth_level.setObjectName("horizontalSlider_smooth_level")
        self.verticalLayout_4.addWidget(self.horizontalSlider_smooth_level)
        self.btn_go_predict = QtWidgets.QPushButton(self.page_2)
        self.btn_go_predict.setEnabled(True)
        self.btn_go_predict.setGeometry(QtCore.QRect(10, 250, 171, 30))
        self.btn_go_predict.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_go_predict.setFont(font)
        self.btn_go_predict.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #d4e5f0;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_go_predict.setObjectName("btn_go_predict")
        self.layoutWidget2 = QtWidgets.QWidget(self.page_2)
        self.layoutWidget2.setGeometry(QtCore.QRect(10, 20, 170, 37))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.imagets_path = QtWidgets.QTextEdit(self.layoutWidget2)
        self.imagets_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.imagets_path.setFont(font)
        self.imagets_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 9px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.imagets_path.setObjectName("imagets_path")
        self.horizontalLayout.addWidget(self.imagets_path)
        self.btn_imagets = QtWidgets.QToolButton(self.layoutWidget2)
        self.btn_imagets.setObjectName("btn_imagets")
        self.horizontalLayout.addWidget(self.btn_imagets)
        self.layoutWidget3 = QtWidgets.QWidget(self.page_2)
        self.layoutWidget3.setGeometry(QtCore.QRect(10, 90, 170, 37))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.inferstr_path = QtWidgets.QTextEdit(self.layoutWidget3)
        self.inferstr_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.inferstr_path.setFont(font)
        self.inferstr_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 9px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.inferstr_path.setObjectName("inferstr_path")
        self.horizontalLayout_2.addWidget(self.inferstr_path)
        self.btn_inferstr = QtWidgets.QToolButton(self.layoutWidget3)
        self.btn_inferstr.setObjectName("btn_inferstr")
        self.horizontalLayout_2.addWidget(self.btn_inferstr)
        self.enterimagets = QtWidgets.QLabel(self.page_2)
        self.enterimagets.setGeometry(QtCore.QRect(10, 1, 151, 19))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.enterimagets.setFont(font)
        self.enterimagets.setObjectName("enterimagets")
        self.enteroutput = QtWidgets.QLabel(self.page_2)
        self.enteroutput.setGeometry(QtCore.QRect(10, 70, 161, 19))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.enteroutput.setFont(font)
        self.enteroutput.setObjectName("enteroutput")
        self.layoutWidget4 = QtWidgets.QWidget(self.page_2)
        self.layoutWidget4.setGeometry(QtCore.QRect(10, 140, 171, 97))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget4)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.checkBox_smooth_model = QtWidgets.QCheckBox(self.layoutWidget4)
        font = QtGui.QFont()
        font.setFamily("Arial 13")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_smooth_model.setFont(font)
        self.checkBox_smooth_model.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_smooth_model.setStyleSheet("QCheckBox {\n"
"    border: 2px solid gray;\n"
"    border-radius: 10px;\n"
"    padding: 0px 0px 0px 3px;\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    font-family: Arial Bold;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 15px;\n"
"    height: 15px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    border: 2px solid #3b3b3b;\n"
"    background-color: #fff;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #da291c;\n"
"    border: 2px solid gray;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #afafaf;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #fff;\n"
"}")
        self.checkBox_smooth_model.setObjectName("checkBox_smooth_model")
        self.verticalLayout_2.addWidget(self.checkBox_smooth_model)
        self.checkBox_fill_holes = QtWidgets.QCheckBox(self.layoutWidget4)
        self.checkBox_fill_holes.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("BiauKai")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_fill_holes.setFont(font)
        self.checkBox_fill_holes.setStyleSheet("QCheckBox {\n"
"    border: 2px solid gray;\n"
"    border-radius: 10px;\n"
"    padding: 0px 0px 0px 3px;\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    font-family: BiauKai;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 15px;\n"
"    height: 15px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    border: 2px solid #3b3b3b;\n"
"    background-color: #fff;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #da291c;\n"
"    border: 2px solid gray;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #afafaf;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #fff;\n"
"}")
        self.checkBox_fill_holes.setObjectName("checkBox_fill_holes")
        self.verticalLayout_2.addWidget(self.checkBox_fill_holes)
        self.checkBox_generate_model = QtWidgets.QCheckBox(self.layoutWidget4)
        self.checkBox_generate_model.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("BiauKai")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_generate_model.setFont(font)
        self.checkBox_generate_model.setStyleSheet("QCheckBox {\n"
"    border: 2px solid gray;\n"
"    border-radius: 10px;\n"
"    padding: 0px 0px 0px 3px;\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    font-family: BiauKai;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 15px;\n"
"    height: 15px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    border: 2px solid #3b3b3b;\n"
"    background-color: #fff;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #da291c;\n"
"    border: 2px solid gray;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #afafaf;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #fff;\n"
"}")
        self.checkBox_generate_model.setObjectName("checkBox_generate_model")
        self.verticalLayout_2.addWidget(self.checkBox_generate_model)
        self.stackedWidget.addWidget(self.page_2)
        self.page_dicom = QtWidgets.QWidget()
        self.page_dicom.setObjectName("page_dicom")
        self.horizontalSlider_threshold = QtWidgets.QSlider(self.page_dicom)
        self.horizontalSlider_threshold.setEnabled(False)
        self.horizontalSlider_threshold.setGeometry(QtCore.QRect(10, 50, 171, 22))
        self.horizontalSlider_threshold.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #e63946;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 20px;\n"
"    margin: -5px 0;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #e76f51;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #e5e5e5;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌背景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #ffb4a2;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/* 禁用状态樣式 */\n"
"QSlider::handle:horizontal:disabled {\n"
"    background: #6d6a75;  /* 禁用状态的背景颜色 */\n"
"    border: 1px solid #999999;  /* 禁用状态的边框颜色 */\n"
"}\n"
"\n"
"QSlider::add-page:horizontal :disabled{\n"
"    background: #6d6a75;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal:disabled {\n"
"    background: #6d6a75;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"")
        self.horizontalSlider_threshold.setMinimum(1)
        self.horizontalSlider_threshold.setMaximum(100)
        self.horizontalSlider_threshold.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_threshold.setObjectName("horizontalSlider_threshold")
        self.btn_capture = QtWidgets.QPushButton(self.page_dicom)
        self.btn_capture.setGeometry(QtCore.QRect(10, 80, 41, 20))
        self.btn_capture.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #d4e5f0;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_capture.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/capture.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/capture.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.btn_capture.setIcon(icon)
        self.btn_capture.setObjectName("btn_capture")
        self.btn_close_dcm = QtWidgets.QPushButton(self.page_dicom)
        self.btn_close_dcm.setGeometry(QtCore.QRect(10, 480, 171, 28))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_close_dcm.setFont(font)
        self.btn_close_dcm.setStyleSheet("QPushButton {\n"
"    background-color: #d72c15;  \n"
"    border-style: outset;\n"
"    border-width: 2px;\n"
"    border-radius: 10px;\n"
"    font-weight: 900;  \n"
"    color: white;\n"
"    padding: 3px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #AA0000;  \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #880000;  \n"
"}")
        self.btn_close_dcm.setObjectName("btn_close_dcm")
        self.value_window = QtWidgets.QLineEdit(self.page_dicom)
        self.value_window.setGeometry(QtCore.QRect(120, 240, 51, 31))
        self.value_window.setMinimumSize(QtCore.QSize(20, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.value_window.setFont(font)
        self.value_window.setStyleSheet("QLineEdit {\n"
"    text-align: center;\n"
"    font-family: \"Arial\";\n"
"    font-size: 15px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit::focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}")
        self.value_window.setObjectName("value_window")
        self.horizontalSlider_window = QtWidgets.QSlider(self.page_dicom)
        self.horizontalSlider_window.setEnabled(True)
        self.horizontalSlider_window.setGeometry(QtCore.QRect(10, 280, 161, 22))
        self.horizontalSlider_window.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #457b9d;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 20px;\n"
"    margin: -5px 0;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #e76f51;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #e5e5e5;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌背景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #ffb4a2;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_window.setMinimum(1)
        self.horizontalSlider_window.setMaximum(100)
        self.horizontalSlider_window.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_window.setObjectName("horizontalSlider_window")
        self.value_level = QtWidgets.QLineEdit(self.page_dicom)
        self.value_level.setGeometry(QtCore.QRect(120, 310, 51, 31))
        self.value_level.setMinimumSize(QtCore.QSize(20, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.value_level.setFont(font)
        self.value_level.setStyleSheet("QLineEdit {\n"
"    text-align: center;\n"
"    font-family: \"Arial\";\n"
"    font-size: 15px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit::focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}")
        self.value_level.setObjectName("value_level")
        self.horizontalSlider_level = QtWidgets.QSlider(self.page_dicom)
        self.horizontalSlider_level.setEnabled(True)
        self.horizontalSlider_level.setGeometry(QtCore.QRect(10, 350, 161, 22))
        self.horizontalSlider_level.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #457b9d;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 20px;\n"
"    margin: -5px 0;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #e76f51;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #e5e5e5;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌背景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #ffb4a2;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_level.setMinimum(1)
        self.horizontalSlider_level.setMaximum(100)
        self.horizontalSlider_level.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_level.setObjectName("horizontalSlider_level")
        self.label_window = QtWidgets.QLabel(self.page_dicom)
        self.label_window.setGeometry(QtCore.QRect(10, 240, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_window.setFont(font)
        self.label_window.setStyleSheet("color: black;\n"
"border: 2px solid #e7ecef;\n"
"border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_window.setAlignment(QtCore.Qt.AlignCenter)
        self.label_window.setObjectName("label_window")
        self.label_level = QtWidgets.QLabel(self.page_dicom)
        self.label_level.setGeometry(QtCore.QRect(10, 310, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_level.setFont(font)
        self.label_level.setStyleSheet("color: black;\n"
"border: 2px solid #e7ecef;\n"
"border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_level.setAlignment(QtCore.Qt.AlignCenter)
        self.label_level.setObjectName("label_level")
        self.current_Threshold = QtWidgets.QLabel(self.page_dicom)
        self.current_Threshold.setGeometry(QtCore.QRect(10, 10, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.current_Threshold.setFont(font)
        self.current_Threshold.setStyleSheet("color: white;\n"
"border: 2px solid white;\n"
"border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.current_Threshold.setAlignment(QtCore.Qt.AlignCenter)
        self.current_Threshold.setObjectName("current_Threshold")
        self.threshold = QtWidgets.QLineEdit(self.page_dicom)
        self.threshold.setEnabled(False)
        self.threshold.setGeometry(QtCore.QRect(120, 10, 51, 31))
        self.threshold.setMinimumSize(QtCore.QSize(20, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.threshold.setFont(font)
        self.threshold.setStyleSheet("QLineEdit {\n"
"    text-align: center;\n"
"    font-family: \"Arial\";\n"
"    font-size: 15px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit::focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QLineEdit::disabled {\n"
"    background: #6d6a75;\n"
"    color: white;\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}")
        self.threshold.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.threshold.setObjectName("threshold")
        self.btn_wlstyle_1 = QtWidgets.QPushButton(self.page_dicom)
        self.btn_wlstyle_1.setGeometry(QtCore.QRect(10, 120, 51, 51))
        self.btn_wlstyle_1.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #0d3b66;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 1px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_wlstyle_1.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/wl_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_wlstyle_1.setIcon(icon1)
        self.btn_wlstyle_1.setIconSize(QtCore.QSize(42, 42))
        self.btn_wlstyle_1.setObjectName("btn_wlstyle_1")
        self.btn_wlstyle_2 = QtWidgets.QPushButton(self.page_dicom)
        self.btn_wlstyle_2.setGeometry(QtCore.QRect(70, 120, 51, 51))
        self.btn_wlstyle_2.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #0d3b66;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 1px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_wlstyle_2.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/wl_2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_wlstyle_2.setIcon(icon2)
        self.btn_wlstyle_2.setIconSize(QtCore.QSize(42, 42))
        self.btn_wlstyle_2.setObjectName("btn_wlstyle_2")
        self.btn_wlstyle_3 = QtWidgets.QPushButton(self.page_dicom)
        self.btn_wlstyle_3.setGeometry(QtCore.QRect(130, 120, 51, 51))
        self.btn_wlstyle_3.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #0d3b66;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 1px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_wlstyle_3.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/wl_3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_wlstyle_3.setIcon(icon3)
        self.btn_wlstyle_3.setIconSize(QtCore.QSize(42, 42))
        self.btn_wlstyle_3.setObjectName("btn_wlstyle_3")
        self.btn_wlstyle_4 = QtWidgets.QPushButton(self.page_dicom)
        self.btn_wlstyle_4.setGeometry(QtCore.QRect(10, 180, 51, 51))
        self.btn_wlstyle_4.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #0d3b66;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 1px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_wlstyle_4.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/wl_4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_wlstyle_4.setIcon(icon4)
        self.btn_wlstyle_4.setIconSize(QtCore.QSize(42, 42))
        self.btn_wlstyle_4.setObjectName("btn_wlstyle_4")
        self.btn_wlstyle_5 = QtWidgets.QPushButton(self.page_dicom)
        self.btn_wlstyle_5.setGeometry(QtCore.QRect(70, 180, 51, 51))
        self.btn_wlstyle_5.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #0d3b66;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 1px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_wlstyle_5.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/wl_5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_wlstyle_5.setIcon(icon5)
        self.btn_wlstyle_5.setIconSize(QtCore.QSize(42, 42))
        self.btn_wlstyle_5.setObjectName("btn_wlstyle_5")
        self.btn_wlstyle_6 = QtWidgets.QPushButton(self.page_dicom)
        self.btn_wlstyle_6.setGeometry(QtCore.QRect(130, 180, 51, 51))
        self.btn_wlstyle_6.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #0d3b66;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 1px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_wlstyle_6.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/wl_6.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_wlstyle_6.setIcon(icon6)
        self.btn_wlstyle_6.setIconSize(QtCore.QSize(42, 42))
        self.btn_wlstyle_6.setObjectName("btn_wlstyle_6")
        self.background_7 = QtWidgets.QLabel(self.page_dicom)
        self.background_7.setGeometry(QtCore.QRect(0, 110, 191, 271))
        self.background_7.setStyleSheet("color: white;\n"
"background-color: #6096ba; \n"
"border: 1px solid gray;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_7.setText("")
        self.background_7.setObjectName("background_7")
        self.btn_add_dcm_seg = QtWidgets.QPushButton(self.page_dicom)
        self.btn_add_dcm_seg.setGeometry(QtCore.QRect(10, 398, 171, 28))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_add_dcm_seg.setFont(font)
        self.btn_add_dcm_seg.setStyleSheet("QPushButton {\n"
"    background-color: #22223b;  \n"
"    border-style: outset;\n"
"    border-width: 2px;\n"
"    border-radius: 10px;\n"
"    font-weight: 900;  \n"
"    color: white;\n"
"    padding: 3px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #4a4e69;  \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #9a8c98;  \n"
"}")
        self.btn_add_dcm_seg.setObjectName("btn_add_dcm_seg")
        self.checkBox_see_3d = QtWidgets.QCheckBox(self.page_dicom)
        self.checkBox_see_3d.setGeometry(QtCore.QRect(70, 70, 21, 41))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_see_3d.sizePolicy().hasHeightForWidth())
        self.checkBox_see_3d.setSizePolicy(sizePolicy)
        self.checkBox_see_3d.setStyleSheet(" /* 未选中状态 */\n"
"QCheckBox::indicator:unchecked {\n"
"    background-image: url(/Users/andy/Desktop/git-respostory/QT_complet/icon/eye_close.png);\n"
"    background-repeat: no-repeat;\n"
"    width: 50px;\n"
"    height: 50px;\n"
"    background-origin: content-box;\n"
"    background-position:left; /* 设置图像位置为中心 */\n"
"}\n"
"\n"
"/* 选中状态 */\n"
"QCheckBox::indicator:checked {\n"
"    background-image: url(/Users/andy/Desktop/git-respostory/QT_complet/icon/eye_open.png);\n"
"    background-repeat: no-repeat;\n"
"    width: 50px;\n"
"    height: 50px;\n"
"    background-origin: content-box;\n"
"    background-position:left; /* 设置图像位置为中心 */\n"
"}\n"
"\n"
"/* 鼠标悬停状态 */\n"
"QCheckBox::indicator:hover {\n"
"    background-image: url(/Users/andy/Desktop/git-respostory/QT_complet/icon/eye_open.png);  /* 替换为悬停状态的图像路径 */\n"
"    background-repeat: no-repeat;\n"
"    width: 50px;\n"
"    height: 50px;\n"
"    background-origin: content-box;\n"
"    background-position: left; /* 设置图像位置为中心 */\n"
"}\n"
"\n"
"\n"
"")
        self.checkBox_see_3d.setText("")
        self.checkBox_see_3d.setIconSize(QtCore.QSize(16, 16))
        self.checkBox_see_3d.setObjectName("checkBox_see_3d")
        self.label_checkbox_see3d = QtWidgets.QLabel(self.page_dicom)
        self.label_checkbox_see3d.setGeometry(QtCore.QRect(60, 81, 41, 20))
        self.label_checkbox_see3d.setStyleSheet("QLabel {\n"
"    background-color: #d4e5f0;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-size: 15px;  /* 設置文字大小 */\n"
"    font-family: BiauKai;  /* 設置標楷體 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: black;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QLabel:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}")
        self.label_checkbox_see3d.setText("")
        self.label_checkbox_see3d.setObjectName("label_checkbox_see3d")
        self.btn_get_3dmodel = QtWidgets.QPushButton(self.page_dicom)
        self.btn_get_3dmodel.setGeometry(QtCore.QRect(10, 437, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_get_3dmodel.setFont(font)
        self.btn_get_3dmodel.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #2d6a4f;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #1b4332;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_get_3dmodel.setObjectName("btn_get_3dmodel")
        self.btn_display_single_slice = QtWidgets.QPushButton(self.page_dicom)
        self.btn_display_single_slice.setGeometry(QtCore.QRect(10, 560, 171, 28))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_display_single_slice.setFont(font)
        self.btn_display_single_slice.setStyleSheet("QPushButton {\n"
"    background-color: #6096ba;  \n"
"    border-style: outset;\n"
"    border-color: white;\n"
"    border-width: 2px;\n"
"    border-radius: 10px;\n"
"    font-weight: 900;  \n"
"    color: black;\n"
"    padding: 3px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #4a4e69;  \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #9a8c98;  \n"
"}")
        self.btn_display_single_slice.setObjectName("btn_display_single_slice")
        self.background_7.raise_()
        self.horizontalSlider_threshold.raise_()
        self.btn_capture.raise_()
        self.btn_close_dcm.raise_()
        self.value_window.raise_()
        self.horizontalSlider_window.raise_()
        self.value_level.raise_()
        self.horizontalSlider_level.raise_()
        self.label_window.raise_()
        self.label_level.raise_()
        self.current_Threshold.raise_()
        self.threshold.raise_()
        self.btn_wlstyle_1.raise_()
        self.btn_wlstyle_2.raise_()
        self.btn_wlstyle_3.raise_()
        self.btn_wlstyle_4.raise_()
        self.btn_wlstyle_5.raise_()
        self.btn_wlstyle_6.raise_()
        self.btn_add_dcm_seg.raise_()
        self.label_checkbox_see3d.raise_()
        self.checkBox_see_3d.raise_()
        self.btn_get_3dmodel.raise_()
        self.btn_display_single_slice.raise_()
        self.stackedWidget.addWidget(self.page_dicom)
        self.page_3d = QtWidgets.QWidget()
        self.page_3d.setObjectName("page_3d")
        self.btn_close_vtk = QtWidgets.QPushButton(self.page_3d)
        self.btn_close_vtk.setGeometry(QtCore.QRect(10, 480, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_close_vtk.setFont(font)
        self.btn_close_vtk.setStyleSheet("QPushButton {\n"
"    background-color: #d72c15;  \n"
"    border-style: outset;\n"
"    border-width: 2px;\n"
"    border-radius: 10px;\n"
"    font-weight: 900;  \n"
"    color: white;\n"
"    padding: 3px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #AA0000;  \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #880000;  \n"
"}")
        self.btn_close_vtk.setObjectName("btn_close_vtk")
        self.btn_exchange_model = QtWidgets.QPushButton(self.page_3d)
        self.btn_exchange_model.setGeometry(QtCore.QRect(10, 440, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(99)
        self.btn_exchange_model.setFont(font)
        self.btn_exchange_model.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #2d6a4f;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #1b4332;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_exchange_model.setObjectName("btn_exchange_model")
        self.btn_add_model = QtWidgets.QPushButton(self.page_3d)
        self.btn_add_model.setGeometry(QtCore.QRect(10, 160, 171, 32))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_add_model.setFont(font)
        self.btn_add_model.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #e85d04;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #ffba08;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_add_model.setObjectName("btn_add_model")
        self.btn_overlap = QtWidgets.QPushButton(self.page_3d)
        self.btn_overlap.setEnabled(True)
        self.btn_overlap.setGeometry(QtCore.QRect(10, 210, 171, 32))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_overlap.setFont(font)
        self.btn_overlap.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #e85d04;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #ffba08;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_overlap.setObjectName("btn_overlap")
        self.btn_new_model = QtWidgets.QPushButton(self.page_3d)
        self.btn_new_model.setGeometry(QtCore.QRect(10, 110, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(99)
        self.btn_new_model.setFont(font)
        self.btn_new_model.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #2d6a4f;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #1b4332;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_new_model.setObjectName("btn_new_model")
        self.horizontalSlider_opacity_level = QtWidgets.QSlider(self.page_3d)
        self.horizontalSlider_opacity_level.setEnabled(True)
        self.horizontalSlider_opacity_level.setGeometry(QtCore.QRect(10, 80, 171, 22))
        self.horizontalSlider_opacity_level.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #e63946;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 20px;\n"
"    margin: -5px 0;\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #e76f51;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #e5e5e5;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌背景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #ffb4a2;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_opacity_level.setMinimum(1)
        self.horizontalSlider_opacity_level.setMaximum(100)
        self.horizontalSlider_opacity_level.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_opacity_level.setObjectName("horizontalSlider_opacity_level")
        self.current_slice_2 = QtWidgets.QLabel(self.page_3d)
        self.current_slice_2.setGeometry(QtCore.QRect(10, 40, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.current_slice_2.setFont(font)
        self.current_slice_2.setStyleSheet("color: white;\n"
"border: 2px solid white;\n"
"border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"text-align: center; /* 水平居中 */")
        self.current_slice_2.setAlignment(QtCore.Qt.AlignCenter)
        self.current_slice_2.setObjectName("current_slice_2")
        self.opacity_level = QtWidgets.QLineEdit(self.page_3d)
        self.opacity_level.setGeometry(QtCore.QRect(140, 40, 41, 31))
        self.opacity_level.setMinimumSize(QtCore.QSize(20, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.opacity_level.setFont(font)
        self.opacity_level.setStyleSheet("QLineEdit {\n"
"    text-align: center;\n"
"    font-family: \"Arial\";\n"
"    font-size: 15px;\n"
"    text-align: center; /* 水平居中 */\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QLineEdit::focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}")
        self.opacity_level.setAlignment(QtCore.Qt.AlignCenter)
        self.opacity_level.setObjectName("opacity_level")
        self.checkBox_smooth = QtWidgets.QCheckBox(self.page_3d)
        self.checkBox_smooth.setGeometry(QtCore.QRect(4, 10, 91, 23))
        self.checkBox_smooth.setStyleSheet("QCheckBox {\n"
"    border: 2px solid gray;\n"
"    border-radius: 10px;\n"
"    padding: 0px 0px 0px 3px;\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    font-family: BiauKai;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 15px;\n"
"    height: 15px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    border: 2px solid #3b3b3b;\n"
"    background-color: #fff;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #da291c;\n"
"    border: 2px solid gray;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #afafaf;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #fff;\n"
"}")
        self.checkBox_smooth.setObjectName("checkBox_smooth")
        self.checkBox_hole = QtWidgets.QCheckBox(self.page_3d)
        self.checkBox_hole.setGeometry(QtCore.QRect(97, 10, 91, 23))
        self.checkBox_hole.setStyleSheet("QCheckBox {\n"
"    border: 2px solid gray;\n"
"    border-radius: 10px;\n"
"    padding: 0px 0px 0px 3px;\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    font-family: BiauKai;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 15px;\n"
"    height: 15px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    border: 2px solid #3b3b3b;\n"
"    background-color: #fff;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #da291c;\n"
"    border: 2px solid gray;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #afafaf;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #fff;\n"
"}")
        self.checkBox_hole.setObjectName("checkBox_hole")
        self.stackedWidget.addWidget(self.page_3d)
        self.tabWidget = QtWidgets.QTabWidget(self.frame)
        self.tabWidget.setGeometry(QtCore.QRect(190, -30, 1321, 881))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_label = QtWidgets.QWidget()
        self.tab_label.setObjectName("tab_label")
        self.label = QtWidgets.QLabel(self.tab_label)
        self.label.setGeometry(QtCore.QRect(10, 10, 1311, 841))
        self.label.setText("")
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/5.png"))
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.tabWidget.addTab(self.tab_label, "")
        self.tab_cmdlabel = QtWidgets.QWidget()
        self.tab_cmdlabel.setObjectName("tab_cmdlabel")
        self.cmdlabel = QtWidgets.QLabel(self.tab_cmdlabel)
        self.cmdlabel.setGeometry(QtCore.QRect(10, 10, 1311, 841))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.cmdlabel.setFont(font)
        self.cmdlabel.setText("")
        self.cmdlabel.setObjectName("cmdlabel")
        self.tabWidget.addTab(self.tab_cmdlabel, "")
        self.tab_vtkwidget = QtWidgets.QWidget()
        self.tab_vtkwidget.setObjectName("tab_vtkwidget")
        self.tabWidget.addTab(self.tab_vtkwidget, "")
        self.tab_process = QtWidgets.QWidget()
        self.tab_process.setObjectName("tab_process")
        self.manual_path = QtWidgets.QTextEdit(self.tab_process)
        self.manual_path.setGeometry(QtCore.QRect(30, 70, 241, 25))
        self.manual_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.manual_path.setFont(font)
        self.manual_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 9px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.manual_path.setObjectName("manual_path")
        self.label_1 = QtWidgets.QLabel(self.tab_process)
        self.label_1.setGeometry(QtCore.QRect(30, 30, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_1.setFont(font)
        self.label_1.setStyleSheet("color: white;\n"
"background-color: #023e8a; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_1.setAlignment(QtCore.Qt.AlignCenter)
        self.label_1.setObjectName("label_1")
        self.label_2 = QtWidgets.QLabel(self.tab_process)
        self.label_2.setGeometry(QtCore.QRect(370, 30, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: white;\n"
"background-color: #023e8a; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.predict_path = QtWidgets.QTextEdit(self.tab_process)
        self.predict_path.setGeometry(QtCore.QRect(370, 70, 241, 25))
        self.predict_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.predict_path.setFont(font)
        self.predict_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 9px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.predict_path.setObjectName("predict_path")
        self.manual_data_lst = QtWidgets.QLabel(self.tab_process)
        self.manual_data_lst.setGeometry(QtCore.QRect(20, 130, 301, 111))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.manual_data_lst.setFont(font)
        self.manual_data_lst.setStyleSheet("color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.manual_data_lst.setText("")
        self.manual_data_lst.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.manual_data_lst.setWordWrap(True)
        self.manual_data_lst.setObjectName("manual_data_lst")
        self.predict_data_lst = QtWidgets.QLabel(self.tab_process)
        self.predict_data_lst.setGeometry(QtCore.QRect(370, 130, 291, 111))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.predict_data_lst.setFont(font)
        self.predict_data_lst.setStyleSheet("color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.predict_data_lst.setText("")
        self.predict_data_lst.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.predict_data_lst.setWordWrap(True)
        self.predict_data_lst.setObjectName("predict_data_lst")
        self.label_3 = QtWidgets.QLabel(self.tab_process)
        self.label_3.setGeometry(QtCore.QRect(940, 260, 311, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(17)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: white;")
        self.label_3.setObjectName("label_3")
        self.btn_openexcel = QtWidgets.QPushButton(self.tab_process)
        self.btn_openexcel.setEnabled(True)
        self.btn_openexcel.setGeometry(QtCore.QRect(1000, 310, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_openexcel.setFont(font)
        self.btn_openexcel.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #2d6a4f;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #1b4332;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_openexcel.setObjectName("btn_openexcel")
        self.btn_home = QtWidgets.QPushButton(self.tab_process)
        self.btn_home.setGeometry(QtCore.QRect(1080, 310, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_home.setFont(font)
        self.btn_home.setStyleSheet("QPushButton {\n"
"    background-color: #d72c15;  \n"
"    border-style: outset;\n"
"    border-width: 2px;\n"
"    border-radius: 10px;\n"
"    font-weight: 900;  \n"
"    color: white;\n"
"    padding: 3px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #AA0000;  \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #880000;  \n"
"}")
        self.btn_home.setObjectName("btn_home")
        self.btn_calculate = QtWidgets.QPushButton(self.tab_process)
        self.btn_calculate.setGeometry(QtCore.QRect(680, 30, 191, 30))
        self.btn_calculate.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(99)
        self.btn_calculate.setFont(font)
        self.btn_calculate.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #fb8500;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_calculate.setObjectName("btn_calculate")
        self.checkBox_save_excel = QtWidgets.QCheckBox(self.tab_process)
        self.checkBox_save_excel.setGeometry(QtCore.QRect(680, 70, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_save_excel.setFont(font)
        self.checkBox_save_excel.setStyleSheet("QCheckBox {\n"
"    border: 2px solid gray;\n"
"    border-radius: 10px;\n"
"    padding: 0px 0px 0px 3px;\n"
"    color: black;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 15px;\n"
"    height: 15px;\n"
"    border-radius: 7px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    border: 2px solid #3b3b3b;\n"
"    background-color: #fff;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    background-color: #da291c;\n"
"    border: 2px solid gray;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #afafaf;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked:disabled {\n"
"    border: 2px solid #afafaf;\n"
"    background-color: #fff;\n"
"}")
        self.checkBox_save_excel.setObjectName("checkBox_save_excel")
        self.save_path = QtWidgets.QTextEdit(self.tab_process)
        self.save_path.setGeometry(QtCore.QRect(910, 70, 241, 25))
        self.save_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.save_path.setFont(font)
        self.save_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 9px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.save_path.setObjectName("save_path")
        self.label_4 = QtWidgets.QLabel(self.tab_process)
        self.label_4.setGeometry(QtCore.QRect(910, 30, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: white;\n"
"background-color: #1b4332; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.background_2 = QtWidgets.QLabel(self.tab_process)
        self.background_2.setGeometry(QtCore.QRect(20, 20, 641, 91))
        self.background_2.setStyleSheet("color: white;\n"
"background-color: #0077b6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_2.setText("")
        self.background_2.setObjectName("background_2")
        self.background_excel = QtWidgets.QLabel(self.tab_process)
        self.background_excel.setGeometry(QtCore.QRect(900, 20, 301, 91))
        self.background_excel.setStyleSheet("color: white;\n"
"background-color: #40916c; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_excel.setText("")
        self.background_excel.setObjectName("background_excel")
        self.background_open = QtWidgets.QLabel(self.tab_process)
        self.background_open.setGeometry(QtCore.QRect(930, 260, 331, 91))
        self.background_open.setStyleSheet("color: white;\n"
"background-color: #023047; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_open.setText("")
        self.background_open.setObjectName("background_open")
        self.background_3 = QtWidgets.QLabel(self.tab_process)
        self.background_3.setGeometry(QtCore.QRect(0, 10, 1311, 841))
        font = QtGui.QFont()
        font.setFamily("Kaiti TC")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.background_3.setFont(font)
        self.background_3.setStyleSheet("color: black;\n"
"background-color: #6c757d; \n"
"border: 2px solid #00000;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_3.setText("")
        self.background_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.background_3.setObjectName("background_3")
        self.df_display = QtWidgets.QTableWidget(self.tab_process)
        self.df_display.setGeometry(QtCore.QRect(20, 260, 861, 461))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.df_display.setFont(font)
        self.df_display.setStyleSheet("color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.df_display.setDragDropOverwriteMode(False)
        self.df_display.setObjectName("df_display")
        self.df_display.setColumnCount(0)
        self.df_display.setRowCount(0)
        self.df_display.verticalHeader().setDefaultSectionSize(38)
        self.df_display.verticalHeader().setHighlightSections(True)
        self.btn_manual_path = QtWidgets.QPushButton(self.tab_process)
        self.btn_manual_path.setGeometry(QtCore.QRect(280, 70, 31, 21))
        self.btn_manual_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1d3557;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #4895ef;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_manual_path.setObjectName("btn_manual_path")
        self.btn_predict_path = QtWidgets.QPushButton(self.tab_process)
        self.btn_predict_path.setGeometry(QtCore.QRect(620, 70, 31, 21))
        self.btn_predict_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1d3557;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #4895ef;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_predict_path.setObjectName("btn_predict_path")
        self.btn_save_path = QtWidgets.QPushButton(self.tab_process)
        self.btn_save_path.setGeometry(QtCore.QRect(1160, 70, 31, 21))
        self.btn_save_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1b4332;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #b7e4c7;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_save_path.setObjectName("btn_save_path")
        self.background_3.raise_()
        self.background_open.raise_()
        self.background_excel.raise_()
        self.background_2.raise_()
        self.manual_path.raise_()
        self.label_1.raise_()
        self.label_2.raise_()
        self.predict_path.raise_()
        self.manual_data_lst.raise_()
        self.predict_data_lst.raise_()
        self.label_3.raise_()
        self.btn_openexcel.raise_()
        self.btn_home.raise_()
        self.btn_calculate.raise_()
        self.checkBox_save_excel.raise_()
        self.save_path.raise_()
        self.label_4.raise_()
        self.df_display.raise_()
        self.btn_manual_path.raise_()
        self.btn_predict_path.raise_()
        self.btn_save_path.raise_()
        self.tabWidget.addTab(self.tab_process, "")
        self.tab_dicom = QtWidgets.QWidget()
        self.tab_dicom.setObjectName("tab_dicom")
        self.horizontalSlider_dicom_raw = QtWidgets.QSlider(self.tab_dicom)
        self.horizontalSlider_dicom_raw.setGeometry(QtCore.QRect(52, 4, 591, 22))
        self.horizontalSlider_dicom_raw.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #343a40;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 10px;\n"
"    margin: -5px 0;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #370617;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #00000;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #fec5bb;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_dicom_raw.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_dicom_raw.setObjectName("horizontalSlider_dicom_raw")
        self.label_slider_raw = QtWidgets.QLabel(self.tab_dicom)
        self.label_slider_raw.setGeometry(QtCore.QRect(20, 5, 633, 21))
        self.label_slider_raw.setStyleSheet("color: white;\n"
"background-color: #ff3320; \n"
"")
        self.label_slider_raw.setText("")
        self.label_slider_raw.setObjectName("label_slider_raw")
        self.label_slider_coronal = QtWidgets.QLabel(self.tab_dicom)
        self.label_slider_coronal.setGeometry(QtCore.QRect(20, 411, 633, 21))
        self.label_slider_coronal.setStyleSheet("color: white;\n"
"background-color: #55ad37; \n"
"")
        self.label_slider_coronal.setText("")
        self.label_slider_coronal.setObjectName("label_slider_coronal")
        self.horizontalSlider_dicom_coronal = QtWidgets.QSlider(self.tab_dicom)
        self.horizontalSlider_dicom_coronal.setGeometry(QtCore.QRect(52, 410, 591, 22))
        self.horizontalSlider_dicom_coronal.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #343a40;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 10px;\n"
"    margin: -5px 0;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #081c15;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #00000;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #95d5b2;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_dicom_coronal.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_dicom_coronal.setObjectName("horizontalSlider_dicom_coronal")
        self.label_slider_sagitta = QtWidgets.QLabel(self.tab_dicom)
        self.label_slider_sagitta.setGeometry(QtCore.QRect(663, 411, 632, 21))
        self.label_slider_sagitta.setStyleSheet("color: white;\n"
"background-color: #eacd19; \n"
"")
        self.label_slider_sagitta.setText("")
        self.label_slider_sagitta.setObjectName("label_slider_sagitta")
        self.horizontalSlider_dicom_sagitta = QtWidgets.QSlider(self.tab_dicom)
        self.horizontalSlider_dicom_sagitta.setGeometry(QtCore.QRect(696, 410, 591, 22))
        self.horizontalSlider_dicom_sagitta.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #343a40;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 10px;\n"
"    margin: -5px 0;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #f3722c;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #00000;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #ffee9d;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_dicom_sagitta.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_dicom_sagitta.setObjectName("horizontalSlider_dicom_sagitta")
        self.label_slider_3d = QtWidgets.QLabel(self.tab_dicom)
        self.label_slider_3d.setGeometry(QtCore.QRect(663, 5, 632, 21))
        self.label_slider_3d.setStyleSheet("color: white;\n"
"background-color: #5f6db5; \n"
"padding-left: 32px;\n"
"\n"
"")
        self.label_slider_3d.setTextFormat(QtCore.Qt.AutoText)
        self.label_slider_3d.setObjectName("label_slider_3d")
        self.pushButton_zoom_raw = QtWidgets.QPushButton(self.tab_dicom)
        self.pushButton_zoom_raw.setGeometry(QtCore.QRect(15, 0, 41, 31))
        self.pushButton_zoom_raw.setStyleSheet("background-color: transparent;\n"
"border: none;\n"
"outline: none;")
        self.pushButton_zoom_raw.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/zoom.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_zoom_raw.setIcon(icon7)
        self.pushButton_zoom_raw.setObjectName("pushButton_zoom_raw")
        self.pushButton_zoom_coronal = QtWidgets.QPushButton(self.tab_dicom)
        self.pushButton_zoom_coronal.setGeometry(QtCore.QRect(15, 406, 41, 31))
        self.pushButton_zoom_coronal.setStyleSheet("background-color: transparent;\n"
"border: none;\n"
"outline: none;")
        self.pushButton_zoom_coronal.setText("")
        self.pushButton_zoom_coronal.setIcon(icon7)
        self.pushButton_zoom_coronal.setObjectName("pushButton_zoom_coronal")
        self.pushButton_zoom_sagitta = QtWidgets.QPushButton(self.tab_dicom)
        self.pushButton_zoom_sagitta.setGeometry(QtCore.QRect(658, 406, 41, 31))
        self.pushButton_zoom_sagitta.setStyleSheet("background-color: transparent;\n"
"border: none;\n"
"outline: none;")
        self.pushButton_zoom_sagitta.setText("")
        self.pushButton_zoom_sagitta.setIcon(icon7)
        self.pushButton_zoom_sagitta.setObjectName("pushButton_zoom_sagitta")
        self.pushButton_zoom_3d = QtWidgets.QPushButton(self.tab_dicom)
        self.pushButton_zoom_3d.setGeometry(QtCore.QRect(658, 0, 41, 31))
        self.pushButton_zoom_3d.setStyleSheet("background-color: transparent;\n"
"border: none;\n"
"outline: none;")
        self.pushButton_zoom_3d.setText("")
        self.pushButton_zoom_3d.setIcon(icon7)
        self.pushButton_zoom_3d.setObjectName("pushButton_zoom_3d")
        self.label_slider_raw.raise_()
        self.horizontalSlider_dicom_raw.raise_()
        self.label_slider_coronal.raise_()
        self.horizontalSlider_dicom_coronal.raise_()
        self.label_slider_3d.raise_()
        self.label_slider_sagitta.raise_()
        self.horizontalSlider_dicom_sagitta.raise_()
        self.pushButton_zoom_raw.raise_()
        self.pushButton_zoom_coronal.raise_()
        self.pushButton_zoom_sagitta.raise_()
        self.pushButton_zoom_3d.raise_()
        self.tabWidget.addTab(self.tab_dicom, "")
        self.tab_dicom_zoom = QtWidgets.QWidget()
        self.tab_dicom_zoom.setObjectName("tab_dicom_zoom")
        self.horizontalSlider_dicom_zoom_raw = QtWidgets.QSlider(self.tab_dicom_zoom)
        self.horizontalSlider_dicom_zoom_raw.setGeometry(QtCore.QRect(52, 4, 1231, 22))
        self.horizontalSlider_dicom_zoom_raw.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #343a40;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 10px;\n"
"    margin: -5px 0;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #370617;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #00000;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #fec5bb;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_dicom_zoom_raw.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_dicom_zoom_raw.setObjectName("horizontalSlider_dicom_zoom_raw")
        self.label_slider_zoom = QtWidgets.QLabel(self.tab_dicom_zoom)
        self.label_slider_zoom.setGeometry(QtCore.QRect(20, 5, 1275, 21))
        self.label_slider_zoom.setStyleSheet("color: white;\n"
"background-color: #ff3320; \n"
"")
        self.label_slider_zoom.setText("")
        self.label_slider_zoom.setObjectName("label_slider_zoom")
        self.pushButton_zoom_in = QtWidgets.QPushButton(self.tab_dicom_zoom)
        self.pushButton_zoom_in.setGeometry(QtCore.QRect(15, 0, 41, 31))
        self.pushButton_zoom_in.setStyleSheet("background-color: transparent;\n"
"border: none;\n"
"outline: none;")
        self.pushButton_zoom_in.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/zoomin.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_zoom_in.setIcon(icon8)
        self.pushButton_zoom_in.setObjectName("pushButton_zoom_in")
        self.horizontalSlider_dicom_zoom_coronal = QtWidgets.QSlider(self.tab_dicom_zoom)
        self.horizontalSlider_dicom_zoom_coronal.setGeometry(QtCore.QRect(52, 4, 1231, 22))
        self.horizontalSlider_dicom_zoom_coronal.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #343a40;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 10px;\n"
"    margin: -5px 0;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #081c15;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #00000;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #95d5b2;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_dicom_zoom_coronal.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_dicom_zoom_coronal.setObjectName("horizontalSlider_dicom_zoom_coronal")
        self.horizontalSlider_dicom_zoom_sagitta = QtWidgets.QSlider(self.tab_dicom_zoom)
        self.horizontalSlider_dicom_zoom_sagitta.setGeometry(QtCore.QRect(52, 4, 1231, 22))
        self.horizontalSlider_dicom_zoom_sagitta.setStyleSheet("/*橫向滑軌，設定無邊框、背景色、高度和圓角*/\n"
"QSlider::groove:horizontal {\n"
"    border: none;\n"
"    background: #ddd;\n"
"    height: 5px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑塊，設定背景色、無邊框、高度、寬度、位移和圓角*/\n"
"QSlider::handle:horizontal {\n"
"    background: #343a40;\n"
"    border: none;\n"
"    height: 20px;\n"
"    width: 10px;\n"
"    margin: -5px 0;\n"
"    border-radius: 0px;\n"
"}\n"
"\n"
"/*橫向滑塊滑鼠懸停時，設定背景色*/\n"
"QSlider::handle:horizontal:hover {\n"
"    background: #f3722c;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::add-page:horizontal {\n"
"    background: #00000;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"/*橫向滑軌前景，設定背景色和圓角*/\n"
"QSlider::sub-page:horizontal {\n"
"    background: #ffee9d;\n"
"    border: none;\n"
"    height: 10px;\n"
"    border-radius: 5px;\n"
"}")
        self.horizontalSlider_dicom_zoom_sagitta.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_dicom_zoom_sagitta.setObjectName("horizontalSlider_dicom_zoom_sagitta")
        self.label_slider_zoom.raise_()
        self.horizontalSlider_dicom_zoom_raw.raise_()
        self.pushButton_zoom_in.raise_()
        self.horizontalSlider_dicom_zoom_coronal.raise_()
        self.horizontalSlider_dicom_zoom_sagitta.raise_()
        self.tabWidget.addTab(self.tab_dicom_zoom, "")
        self.tab_reliablity = QtWidgets.QWidget()
        self.tab_reliablity.setObjectName("tab_reliablity")
        self.gt_path = QtWidgets.QTextEdit(self.tab_reliablity)
        self.gt_path.setGeometry(QtCore.QRect(30, 70, 241, 25))
        self.gt_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.gt_path.setFont(font)
        self.gt_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 12px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.gt_path.setObjectName("gt_path")
        self.pseudo_path = QtWidgets.QTextEdit(self.tab_reliablity)
        self.pseudo_path.setGeometry(QtCore.QRect(370, 70, 241, 25))
        self.pseudo_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.pseudo_path.setFont(font)
        self.pseudo_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 12px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.pseudo_path.setObjectName("pseudo_path")
        self.btn_pseudo_path = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_pseudo_path.setGeometry(QtCore.QRect(620, 70, 31, 21))
        self.btn_pseudo_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1d3557;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #4895ef;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_pseudo_path.setObjectName("btn_pseudo_path")
        self.btn_calculate_reliablity = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_calculate_reliablity.setGeometry(QtCore.QRect(670, 80, 171, 30))
        self.btn_calculate_reliablity.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(99)
        self.btn_calculate_reliablity.setFont(font)
        self.btn_calculate_reliablity.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #26619C;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #72A0C1;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_calculate_reliablity.setObjectName("btn_calculate_reliablity")
        self.label_7 = QtWidgets.QLabel(self.tab_reliablity)
        self.label_7.setGeometry(QtCore.QRect(370, 30, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: white;\n"
"background-color: #023e8a; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.tab_reliablity)
        self.label_8.setGeometry(QtCore.QRect(30, 30, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: white;\n"
"background-color: #023e8a; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.background_8 = QtWidgets.QLabel(self.tab_reliablity)
        self.background_8.setGeometry(QtCore.QRect(20, 20, 641, 91))
        self.background_8.setStyleSheet("color: white;\n"
"background-color: #0077b6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_8.setText("")
        self.background_8.setObjectName("background_8")
        self.df_display_reliability = QtWidgets.QTableWidget(self.tab_reliablity)
        self.df_display_reliability.setGeometry(QtCore.QRect(20, 260, 1061, 581))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.df_display_reliability.setFont(font)
        self.df_display_reliability.setStyleSheet("color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.df_display_reliability.setDragDropOverwriteMode(False)
        self.df_display_reliability.setObjectName("df_display_reliability")
        self.df_display_reliability.setColumnCount(0)
        self.df_display_reliability.setRowCount(0)
        self.df_display_reliability.verticalHeader().setDefaultSectionSize(38)
        self.df_display_reliability.verticalHeader().setHighlightSections(True)
        self.btn_gt_path = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_gt_path.setGeometry(QtCore.QRect(280, 70, 31, 21))
        self.btn_gt_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1d3557;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #4895ef;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_gt_path.setObjectName("btn_gt_path")
        self.background_9 = QtWidgets.QLabel(self.tab_reliablity)
        self.background_9.setGeometry(QtCore.QRect(0, 10, 1311, 841))
        font = QtGui.QFont()
        font.setFamily("Kaiti TC")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.background_9.setFont(font)
        self.background_9.setStyleSheet("color: black;\n"
"background-color: #6c757d; \n"
"border: 2px solid #00000;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_9.setText("")
        self.background_9.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.background_9.setObjectName("background_9")
        self.mean_reliability = QtWidgets.QTextEdit(self.tab_reliablity)
        self.mean_reliability.setGeometry(QtCore.QRect(1150, 420, 131, 30))
        self.mean_reliability.setMinimumSize(QtCore.QSize(0, 30))
        self.mean_reliability.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.mean_reliability.setFont(font)
        self.mean_reliability.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 15px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.mean_reliability.setReadOnly(True)
        self.mean_reliability.setObjectName("mean_reliability")
        self.btn_save_top_data = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_save_top_data.setEnabled(True)
        self.btn_save_top_data.setGeometry(QtCore.QRect(850, 220, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(99)
        self.btn_save_top_data.setFont(font)
        self.btn_save_top_data.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #1b4332;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #b7e4c7;  \n"
"    color: Black;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_save_top_data.setObjectName("btn_save_top_data")
        self.label_12 = QtWidgets.QLabel(self.tab_reliablity)
        self.label_12.setGeometry(QtCore.QRect(680, 130, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("color: white;\n"
"background-color: #1b4332; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.save_reliability_data_path = QtWidgets.QTextEdit(self.tab_reliablity)
        self.save_reliability_data_path.setGeometry(QtCore.QRect(680, 170, 301, 25))
        self.save_reliability_data_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.save_reliability_data_path.setFont(font)
        self.save_reliability_data_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 12px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.save_reliability_data_path.setObjectName("save_reliability_data_path")
        self.background_out_folder = QtWidgets.QLabel(self.tab_reliablity)
        self.background_out_folder.setGeometry(QtCore.QRect(670, 120, 361, 91))
        self.background_out_folder.setStyleSheet("color: white;\n"
"background-color: #40916c; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_out_folder.setText("")
        self.background_out_folder.setObjectName("background_out_folder")
        self.btn_save_reliability_data_path = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_save_reliability_data_path.setGeometry(QtCore.QRect(990, 170, 31, 21))
        self.btn_save_reliability_data_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1b4332;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #b7e4c7;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_save_reliability_data_path.setObjectName("btn_save_reliability_data_path")
        self.btn_mean_reliability = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_mean_reliability.setEnabled(True)
        self.btn_mean_reliability.setGeometry(QtCore.QRect(1090, 460, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(99)
        self.btn_mean_reliability.setFont(font)
        self.btn_mean_reliability.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #023e8a;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #ebf2fa;  \n"
"    color: black;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_mean_reliability.setObjectName("btn_mean_reliability")
        self.label_9 = QtWidgets.QLabel(self.tab_reliablity)
        self.label_9.setGeometry(QtCore.QRect(1090, 420, 60, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.reliability_lst = QtWidgets.QListWidget(self.tab_reliablity)
        self.reliability_lst.setGeometry(QtCore.QRect(1040, 20, 261, 191))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.reliability_lst.setFont(font)
        self.reliability_lst.setStyleSheet("QListWidget{\n"
"    font-size: 15px;\n"
"    padding: 5px;\n"
"    color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"}\n"
"QListWidgetItem {\n"
"                padding: 10px; /* Optional: Add some padding to the items */\n"
"                text-align: center; /* Center align the text */\n"
"            }")
        self.reliability_lst.setAlternatingRowColors(True)
        self.reliability_lst.setObjectName("reliability_lst")
        self.btn_log_reliability = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_log_reliability.setEnabled(True)
        self.btn_log_reliability.setGeometry(QtCore.QRect(890, 20, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_log_reliability.setFont(font)
        self.btn_log_reliability.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #4e878c;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #d5dfe5;  \n"
"    color: Black;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_log_reliability.setObjectName("btn_log_reliability")
        self.btn_clear_reliability = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_clear_reliability.setEnabled(True)
        self.btn_clear_reliability.setGeometry(QtCore.QRect(890, 60, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_clear_reliability.setFont(font)
        self.btn_clear_reliability.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #d90429;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #f5c396;  \n"
"    color: Black;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_clear_reliability.setObjectName("btn_clear_reliability")
        self.btn_top_persent = QtWidgets.QPushButton(self.tab_reliablity)
        self.btn_top_persent.setEnabled(True)
        self.btn_top_persent.setGeometry(QtCore.QRect(1090, 580, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_top_persent.setFont(font)
        self.btn_top_persent.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #023e8a;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #ebf2fa;  \n"
"    color: black;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_top_persent.setObjectName("btn_top_persent")
        self.top_persent = QtWidgets.QTextEdit(self.tab_reliablity)
        self.top_persent.setGeometry(QtCore.QRect(1100, 540, 141, 30))
        self.top_persent.setMinimumSize(QtCore.QSize(0, 30))
        self.top_persent.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.top_persent.setFont(font)
        self.top_persent.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 15px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.top_persent.setReadOnly(False)
        self.top_persent.setObjectName("top_persent")
        self.label_15 = QtWidgets.QLabel(self.tab_reliablity)
        self.label_15.setGeometry(QtCore.QRect(1250, 540, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.gt_data_lst = QtWidgets.QListWidget(self.tab_reliablity)
        self.gt_data_lst.setGeometry(QtCore.QRect(20, 120, 301, 131))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.gt_data_lst.setFont(font)
        self.gt_data_lst.setStyleSheet("QListWidget{\n"
"    padding: 5px;\n"
"    color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"}")
        self.gt_data_lst.setAlternatingRowColors(True)
        self.gt_data_lst.setObjectName("gt_data_lst")
        self.pseudo_data_lst = QtWidgets.QListWidget(self.tab_reliablity)
        self.pseudo_data_lst.setGeometry(QtCore.QRect(360, 120, 301, 131))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pseudo_data_lst.setFont(font)
        self.pseudo_data_lst.setStyleSheet("QListWidget{\n"
"    padding: 5px;\n"
"    color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"}")
        self.pseudo_data_lst.setAlternatingRowColors(True)
        self.pseudo_data_lst.setObjectName("pseudo_data_lst")
        self.label_16 = QtWidgets.QLabel(self.tab_reliablity)
        self.label_16.setGeometry(QtCore.QRect(1090, 370, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.background_9.raise_()
        self.background_out_folder.raise_()
        self.background_8.raise_()
        self.label_7.raise_()
        self.df_display_reliability.raise_()
        self.label_8.raise_()
        self.btn_pseudo_path.raise_()
        self.btn_calculate_reliablity.raise_()
        self.gt_path.raise_()
        self.pseudo_path.raise_()
        self.btn_gt_path.raise_()
        self.mean_reliability.raise_()
        self.btn_save_top_data.raise_()
        self.btn_save_reliability_data_path.raise_()
        self.label_12.raise_()
        self.save_reliability_data_path.raise_()
        self.btn_mean_reliability.raise_()
        self.label_9.raise_()
        self.reliability_lst.raise_()
        self.btn_log_reliability.raise_()
        self.btn_clear_reliability.raise_()
        self.btn_top_persent.raise_()
        self.top_persent.raise_()
        self.label_15.raise_()
        self.gt_data_lst.raise_()
        self.pseudo_data_lst.raise_()
        self.label_16.raise_()
        self.tabWidget.addTab(self.tab_reliablity, "")
        self.tab_usecheckpoint = QtWidgets.QWidget()
        self.tab_usecheckpoint.setObjectName("tab_usecheckpoint")
        self.background_11 = QtWidgets.QLabel(self.tab_usecheckpoint)
        self.background_11.setGeometry(QtCore.QRect(20, 20, 301, 91))
        self.background_11.setStyleSheet("color: white;\n"
"background-color: #0077b6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_11.setText("")
        self.background_11.setObjectName("background_11")
        self.background_10 = QtWidgets.QLabel(self.tab_usecheckpoint)
        self.background_10.setGeometry(QtCore.QRect(0, 10, 1311, 841))
        font = QtGui.QFont()
        font.setFamily("Kaiti TC")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.background_10.setFont(font)
        self.background_10.setStyleSheet("color: black;\n"
"background-color: #6c757d; \n"
"border: 2px solid #00000;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.background_10.setText("")
        self.background_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.background_10.setObjectName("background_10")
        self.btn_get_checkpoint = QtWidgets.QPushButton(self.tab_usecheckpoint)
        self.btn_get_checkpoint.setGeometry(QtCore.QRect(330, 80, 161, 30))
        self.btn_get_checkpoint.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_get_checkpoint.setFont(font)
        self.btn_get_checkpoint.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #fb8500;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}\n"
"QPushButton:disabled {\n"
"    /* 添加你想要的样式属性 */\n"
"    color: #999999; /* 灰色文字颜色 */\n"
"    background-color: #CCCCCC; /* 灰色背景颜色 */\n"
"    /* 其他样式属性 */\n"
"}")
        self.btn_get_checkpoint.setObjectName("btn_get_checkpoint")
        self.result_path = QtWidgets.QTextEdit(self.tab_usecheckpoint)
        self.result_path.setGeometry(QtCore.QRect(30, 70, 241, 25))
        self.result_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.result_path.setFont(font)
        self.result_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 12px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.result_path.setObjectName("result_path")
        self.btn_result_folder = QtWidgets.QPushButton(self.tab_usecheckpoint)
        self.btn_result_folder.setGeometry(QtCore.QRect(280, 70, 31, 21))
        self.btn_result_folder.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1d3557;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #4895ef;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_result_folder.setObjectName("btn_result_folder")
        self.label_11 = QtWidgets.QLabel(self.tab_usecheckpoint)
        self.label_11.setGeometry(QtCore.QRect(30, 30, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("color: white;\n"
"background-color: #023e8a; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.checkpoint_path = QtWidgets.QTextEdit(self.tab_usecheckpoint)
        self.checkpoint_path.setGeometry(QtCore.QRect(350, 220, 591, 60))
        self.checkpoint_path.setMinimumSize(QtCore.QSize(0, 60))
        self.checkpoint_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.checkpoint_path.setFont(font)
        self.checkpoint_path.setStyleSheet("QTextEdit {\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.checkpoint_path.setReadOnly(True)
        self.checkpoint_path.setObjectName("checkpoint_path")
        self.checkpoint_lst = QtWidgets.QListWidget(self.tab_usecheckpoint)
        self.checkpoint_lst.setGeometry(QtCore.QRect(20, 120, 301, 151))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.checkpoint_lst.setFont(font)
        self.checkpoint_lst.setStyleSheet("QListWidget{\n"
"    padding: 5px;\n"
"    color: black;\n"
"background-color: #dee2e6; \n"
"border: 2px solid white;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"}")
        self.checkpoint_lst.setAlternatingRowColors(True)
        self.checkpoint_lst.setObjectName("checkpoint_lst")
        self.label_10 = QtWidgets.QLabel(self.tab_usecheckpoint)
        self.label_10.setGeometry(QtCore.QRect(340, 180, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.btn_checkpointpredict = QtWidgets.QPushButton(self.tab_usecheckpoint)
        self.btn_checkpointpredict.setGeometry(QtCore.QRect(50, 430, 121, 30))
        self.btn_checkpointpredict.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_checkpointpredict.setFont(font)
        self.btn_checkpointpredict.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #da2c38;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_checkpointpredict.setObjectName("btn_checkpointpredict")
        self.checkpoint_output_path = QtWidgets.QTextEdit(self.tab_usecheckpoint)
        self.checkpoint_output_path.setGeometry(QtCore.QRect(200, 370, 351, 35))
        self.checkpoint_output_path.setMinimumSize(QtCore.QSize(0, 35))
        self.checkpoint_output_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.checkpoint_output_path.setFont(font)
        self.checkpoint_output_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 13px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.checkpoint_output_path.setReadOnly(True)
        self.checkpoint_output_path.setObjectName("checkpoint_output_path")
        self.label_13 = QtWidgets.QLabel(self.tab_usecheckpoint)
        self.label_13.setGeometry(QtCore.QRect(50, 370, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.btn_checkpoint_output_path = QtWidgets.QPushButton(self.tab_usecheckpoint)
        self.btn_checkpoint_output_path.setGeometry(QtCore.QRect(570, 380, 41, 21))
        self.btn_checkpoint_output_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1d3557;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #4895ef;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_checkpoint_output_path.setObjectName("btn_checkpoint_output_path")
        self.btn_to_calculate_reliability = QtWidgets.QPushButton(self.tab_usecheckpoint)
        self.btn_to_calculate_reliability.setGeometry(QtCore.QRect(50, 470, 191, 30))
        self.btn_to_calculate_reliability.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(99)
        self.btn_to_calculate_reliability.setFont(font)
        self.btn_to_calculate_reliability.setStyleSheet("/* 按鈕基本形式 */\n"
"QPushButton {\n"
"    background-color: #2a9134;  /* 設置背景顏色 */\n"
"    border-style: outset;  /* 設置邊框形式：外邊框 */\n"
"    border-width: 2px;  /* 設置邊框粗度 */\n"
"    border-radius: 10px;  /* 設置邊框圓滑程度 */\n"
"    border-color: white;  /* 設置邊框顏色 */\n"
"    font-weight: 900;  /* 設置文字粗體 */\n"
"    color: white;   /* 設置文字顏色 */\n"
"}\n"
"/* 按鈕被選取時形式 */\n"
"QPushButton:hover { \n"
"    background-color: #186ca0;  \n"
"    color: white;  \n"
"\n"
"}\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"}")
        self.btn_to_calculate_reliability.setObjectName("btn_to_calculate_reliability")
        self.btn_checkpoint_input_path = QtWidgets.QPushButton(self.tab_usecheckpoint)
        self.btn_checkpoint_input_path.setGeometry(QtCore.QRect(570, 330, 41, 21))
        self.btn_checkpoint_input_path.setStyleSheet("QPushButton{\n"
"                color: white;\n"
"                background-color: #1d3557;\n"
"                border-radius: 10px;\n"
"            }\n"
"QPushButton:hover{\n"
"                background-color: #4895ef;\n"
"                color: black;\n"
"            }\n"
"/* 按鈕被點下後形式 */\n"
"QPushButton:pressed {\n"
"    background-color: #000000;  \n"
"    color:white;\n"
"}\n"
"")
        self.btn_checkpoint_input_path.setObjectName("btn_checkpoint_input_path")
        self.checkpoint_input_path = QtWidgets.QTextEdit(self.tab_usecheckpoint)
        self.checkpoint_input_path.setGeometry(QtCore.QRect(200, 320, 351, 35))
        self.checkpoint_input_path.setMinimumSize(QtCore.QSize(0, 35))
        self.checkpoint_input_path.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        self.checkpoint_input_path.setFont(font)
        self.checkpoint_input_path.setStyleSheet("QTextEdit {\n"
"    font-family: \"Arial\";\n"
"    font-size: 13px;\n"
"    color: black;\n"
"    background-color: rgba(255, 255, 255, 0.35);\n"
"    border: 1px solid #ccc;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QTextEdit:focus {\n"
"    border: 1px solid #0078d7;\n"
"    outline: none;\n"
"}\n"
"\n"
"QTextEdit::placeholder {\n"
"    color: #999;\n"
"}\n"
"\n"
"QTextEdit::disabled {\n"
"    color: #ccc;\n"
"    background-color: #f7f7f7;\n"
"    border: 1px solid #eee;\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    width: 12px;\n"
"    margin: 12px 0 12px 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #ccc;\n"
"    min-height: 20px;\n"
"    border-radius: 6px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #999;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(add.png);\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical:hover {\n"
"    border-image: url(add_hover.png);\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 12px;\n"
"    width: 12px;\n"
"    border-image: url(sub.png);\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:vertical:hover {\n"
"    border-image: url(sub_hover.png);\n"
"}")
        self.checkpoint_input_path.setReadOnly(True)
        self.checkpoint_input_path.setObjectName("checkpoint_input_path")
        self.label_14 = QtWidgets.QLabel(self.tab_usecheckpoint)
        self.label_14.setGeometry(QtCore.QRect(50, 320, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.background_10.raise_()
        self.background_11.raise_()
        self.btn_get_checkpoint.raise_()
        self.result_path.raise_()
        self.btn_result_folder.raise_()
        self.label_11.raise_()
        self.checkpoint_path.raise_()
        self.checkpoint_lst.raise_()
        self.label_10.raise_()
        self.btn_checkpointpredict.raise_()
        self.checkpoint_output_path.raise_()
        self.label_13.raise_()
        self.btn_checkpoint_output_path.raise_()
        self.btn_to_calculate_reliability.raise_()
        self.btn_checkpoint_input_path.raise_()
        self.checkpoint_input_path.raise_()
        self.label_14.raise_()
        self.tabWidget.addTab(self.tab_usecheckpoint, "")
        self.label_5 = QtWidgets.QLabel(self.frame)
        self.label_5.setGeometry(QtCore.QRect(0, 800, 191, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: #a4133c;\n"
"font-weight: bold;\n"
"color: #fff0f3;\n"
"border: 2px solid #ffccd5;\n"
" border-radius: 10px;  /* 設置邊框圓滑程度 */")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setEnabled(True)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1512, 21))
        self.menubar.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.menubar.setFont(font)
        self.menubar.setStyleSheet("QMenuBar {\n"
"    background-color: #e5e5e5;\n"
"    font-size: 14px;\n"
"    font-family: Arial;\n"
"    font-weight: 600;\n"
"    color: black;\n"
"}\n"
"QMenuBar::item {\n"
"    padding: 2px 10px;\n"
"    background-color: #e5e5e5;\n"
"}\n"
"QMenuBar::item:selected {\n"
"    background-color: #242f40;\n"
"    color: white;\n"
"}")
        self.menubar.setDefaultUp(False)
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuDicom_process = QtWidgets.QMenu(self.menubar)
        self.menuDicom_process.setObjectName("menuDicom_process")
        self.menuresample = QtWidgets.QMenu(self.menuDicom_process)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setKerning(True)
        self.menuresample.setFont(font)
        self.menuresample.setObjectName("menuresample")
        self.menuFormat_converter = QtWidgets.QMenu(self.menuDicom_process)
        self.menuFormat_converter.setObjectName("menuFormat_converter")
        self.menuDicom_to_NIFTI_2 = QtWidgets.QMenu(self.menuFormat_converter)
        self.menuDicom_to_NIFTI_2.setObjectName("menuDicom_to_NIFTI_2")
        self.menuNIFTI_to_Dicom = QtWidgets.QMenu(self.menuFormat_converter)
        self.menuNIFTI_to_Dicom.setObjectName("menuNIFTI_to_Dicom")
        self.menuTo_make_Task_Dir = QtWidgets.QMenu(self.menubar)
        self.menuTo_make_Task_Dir.setObjectName("menuTo_make_Task_Dir")
        self.menuDicom_to_NIFTI = QtWidgets.QMenu(self.menuTo_make_Task_Dir)
        self.menuDicom_to_NIFTI.setObjectName("menuDicom_to_NIFTI")
        self.menu3D_construction = QtWidgets.QMenu(self.menubar)
        self.menu3D_construction.setObjectName("menu3D_construction")
        self.menuCompare_result = QtWidgets.QMenu(self.menubar)
        self.menuCompare_result.setObjectName("menuCompare_result")
        self.menuCalculate_Differrence = QtWidgets.QMenu(self.menuCompare_result)
        self.menuCalculate_Differrence.setObjectName("menuCalculate_Differrence")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setEnabled(True)
        self.menuHelp.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setItalic(False)
        self.menuHelp.setFont(font)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("c:\\Users\\User\\Desktop\\QT_complet\\icon/informationbutton_83733.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuHelp.setIcon(icon9)
        self.menuHelp.setObjectName("menuHelp")
        self.menunnU_Net = QtWidgets.QMenu(self.menubar)
        self.menunnU_Net.setObjectName("menunnU_Net")
        self.menuST_Mdoel = QtWidgets.QMenu(self.menubar)
        self.menuST_Mdoel.setObjectName("menuST_Mdoel")
        self.menuTXT_Process = QtWidgets.QMenu(self.menuST_Mdoel)
        self.menuTXT_Process.setObjectName("menuTXT_Process")
        self.menuDraw_Loss_IMG = QtWidgets.QMenu(self.menuTXT_Process)
        self.menuDraw_Loss_IMG.setObjectName("menuDraw_Loss_IMG")
        self.menuDA = QtWidgets.QMenu(self.menuST_Mdoel)
        self.menuDA.setObjectName("menuDA")
        self.menubatch_process_ = QtWidgets.QMenu(self.menuDA)
        self.menubatch_process_.setObjectName("menubatch_process_")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setStyleSheet("QStatusBar {\n"
"    background-color: #bfbfbf; /*设置背景颜色*/\n"
"    color: black; /*设置文字颜色*/\n"
"    font-size: 12px; /*设置字体大小*/\n"
"    font-family: BiauKai;\n"
"    font-weight: bold;\n"
"    \n"
"}\n"
"\n"
"QStatusBar::item {\n"
"    border: none; /*去掉边框*/\n"
"}\n"
"\n"
"QStatusBar QToolTip {\n"
"    background-color: #fff; /*设置提示的背景颜色*/\n"
"    color: #333; /*设置提示文字颜色*/\n"
"    border: 1px solid #aaa; /*设置提示边框*/\n"
"    font-size: 12px; /*设置提示字体大小*/\n"
"} \n"
"\n"
"QStatusBar QLabel {\n"
"    padding: 3px; /*设置标签的内边距*/\n"
"} \n"
"\n"
"QStatusBar::busy {\n"
"    image: url(busy.gif); /*设置忙时状态图标*/\n"
"} \n"
"\n"
"QStatusBar::permanent {\n"
"    border: none; /*设置永久部件的边框*/\n"
"} \n"
"\n"
"QStatusBar::temporary {\n"
"    border: none; /*设置临时部件的边框*/\n"
"    border-top: 1px solid #aaa; /*设置临时部件顶部的边框*/\n"
"    padding: 2px; /*设置临时部件的内边距*/\n"
"} \n"
"\n"
"QStatusBar::message {\n"
"    font-weight: bold; /*设置消息的字体粗细*/\n"
"}")
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionhalf = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionhalf.setFont(font)
        self.actionhalf.setObjectName("actionhalf")
        self.action1_3 = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.action1_3.setFont(font)
        self.action1_3.setObjectName("action1_3")
        self.action1_4 = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.action1_4.setFont(font)
        self.action1_4.setObjectName("action1_4")
        self.actioncorp = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actioncorp.setFont(font)
        self.actioncorp.setObjectName("actioncorp")
        self.actionGenerate_Json = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionGenerate_Json.setFont(font)
        self.actionGenerate_Json.setObjectName("actionGenerate_Json")
        self.actionRead_NIFTI = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionRead_NIFTI.setFont(font)
        self.actionRead_NIFTI.setObjectName("actionRead_NIFTI")
        self.actiontmtd_Entry_Folder = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actiontmtd_Entry_Folder.setFont(font)
        self.actiontmtd_Entry_Folder.setObjectName("actiontmtd_Entry_Folder")
        self.actiontmtd_Single_data = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actiontmtd_Single_data.setFont(font)
        self.actiontmtd_Single_data.setObjectName("actiontmtd_Single_data")
        self.actionDP_D2N_Entry_Folder = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionDP_D2N_Entry_Folder.setFont(font)
        self.actionDP_D2N_Entry_Folder.setObjectName("actionDP_D2N_Entry_Folder")
        self.actionDP_D2N_Single_Data = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionDP_D2N_Single_Data.setFont(font)
        self.actionDP_D2N_Single_Data.setObjectName("actionDP_D2N_Single_Data")
        self.actionDP_N2D_Entry_Folder = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionDP_N2D_Entry_Folder.setFont(font)
        self.actionDP_N2D_Entry_Folder.setObjectName("actionDP_N2D_Entry_Folder")
        self.actionDP_N2D_Single_Data = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionDP_N2D_Single_Data.setFont(font)
        self.actionDP_N2D_Single_Data.setObjectName("actionDP_N2D_Single_Data")
        self.actionCreat_3D_Model = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionCreat_3D_Model.setFont(font)
        self.actionCreat_3D_Model.setObjectName("actionCreat_3D_Model")
        self.actionModel_Smoothing = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionModel_Smoothing.setFont(font)
        self.actionModel_Smoothing.setObjectName("actionModel_Smoothing")
        self.actionView_Meanufeter = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionView_Meanufeter.setFont(font)
        self.actionView_Meanufeter.setObjectName("actionView_Meanufeter")
        self.actionView_NIFTI = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionView_NIFTI.setFont(font)
        self.actionView_NIFTI.setObjectName("actionView_NIFTI")
        self.actionDraw_LossImage = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionDraw_LossImage.setFont(font)
        self.actionDraw_LossImage.setObjectName("actionDraw_LossImage")
        self.actionHome = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionHome.setFont(font)
        self.actionHome.setObjectName("actionHome")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionHelp.setFont(font)
        self.actionHelp.setObjectName("actionHelp")
        self.actionTest = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionTest.setFont(font)
        self.actionTest.setObjectName("actionTest")
        self.actionPreprocess = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionPreprocess.setFont(font)
        self.actionPreprocess.setObjectName("actionPreprocess")
        self.actionTrain = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionTrain.setFont(font)
        self.actionTrain.setObjectName("actionTrain")
        self.actionPredict = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.actionPredict.setFont(font)
        self.actionPredict.setObjectName("actionPredict")
        self.actionView_3D_model = QtWidgets.QAction(MainWindow)
        self.actionView_3D_model.setObjectName("actionView_3D_model")
        self.actionCalculate_Model = QtWidgets.QAction(MainWindow)
        self.actionCalculate_Model.setObjectName("actionCalculate_Model")
        self.actionSingle = QtWidgets.QAction(MainWindow)
        self.actionSingle.setObjectName("actionSingle")
        self.actionBatch = QtWidgets.QAction(MainWindow)
        self.actionBatch.setObjectName("actionBatch")
        self.actionDisplay_Dicom = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Dicom.setObjectName("actionDisplay_Dicom")
        self.actionsingle_display = QtWidgets.QAction(MainWindow)
        self.actionsingle_display.setObjectName("actionsingle_display")
        self.actionS_WDA = QtWidgets.QAction(MainWindow)
        self.actionS_WDA.setObjectName("actionS_WDA")
        self.actionWDA = QtWidgets.QAction(MainWindow)
        self.actionWDA.setObjectName("actionWDA")
        self.actionMul_txt = QtWidgets.QAction(MainWindow)
        self.actionMul_txt.setObjectName("actionMul_txt")
        self.actionOne_txt = QtWidgets.QAction(MainWindow)
        self.actionOne_txt.setObjectName("actionOne_txt")
        self.actionGet_nifti_in_Folder = QtWidgets.QAction(MainWindow)
        self.actionGet_nifti_in_Folder.setObjectName("actionGet_nifti_in_Folder")
        self.actionMul_txt_ = QtWidgets.QAction(MainWindow)
        self.actionMul_txt_.setObjectName("actionMul_txt_")
        self.actionOne_txt_ = QtWidgets.QAction(MainWindow)
        self.actionOne_txt_.setObjectName("actionOne_txt_")
        self.actionsingle_display_ = QtWidgets.QAction(MainWindow)
        self.actionsingle_display_.setObjectName("actionsingle_display_")
        self.actionS_WDA_ = QtWidgets.QAction(MainWindow)
        self.actionS_WDA_.setObjectName("actionS_WDA_")
        self.actionWDA_ = QtWidgets.QAction(MainWindow)
        self.actionWDA_.setObjectName("actionWDA_")
        self.actionCalculate_Reliability = QtWidgets.QAction(MainWindow)
        self.actionCalculate_Reliability.setObjectName("actionCalculate_Reliability")
        self.actionTrain_Loss = QtWidgets.QAction(MainWindow)
        self.actionTrain_Loss.setObjectName("actionTrain_Loss")
        self.actionValidation_Loss = QtWidgets.QAction(MainWindow)
        self.actionValidation_Loss.setObjectName("actionValidation_Loss")
        self.actionDice_Score = QtWidgets.QAction(MainWindow)
        self.actionDice_Score.setObjectName("actionDice_Score")
        self.actionCompare_Difference = QtWidgets.QAction(MainWindow)
        self.actionCompare_Difference.setObjectName("actionCompare_Difference")
        self.actionDo_it = QtWidgets.QAction(MainWindow)
        self.actionDo_it.setObjectName("actionDo_it")
        self.menuresample.addAction(self.actionhalf)
        self.menuresample.addAction(self.action1_3)
        self.menuresample.addAction(self.action1_4)
        self.menuDicom_to_NIFTI_2.addAction(self.actionDP_D2N_Entry_Folder)
        self.menuDicom_to_NIFTI_2.addAction(self.actionDP_D2N_Single_Data)
        self.menuNIFTI_to_Dicom.addAction(self.actionDP_N2D_Entry_Folder)
        self.menuNIFTI_to_Dicom.addAction(self.actionDP_N2D_Single_Data)
        self.menuFormat_converter.addAction(self.menuDicom_to_NIFTI_2.menuAction())
        self.menuFormat_converter.addAction(self.menuNIFTI_to_Dicom.menuAction())
        self.menuDicom_process.addAction(self.actionDisplay_Dicom)
        self.menuDicom_process.addAction(self.menuresample.menuAction())
        self.menuDicom_process.addAction(self.actioncorp)
        self.menuDicom_process.addAction(self.menuFormat_converter.menuAction())
        self.menuDicom_process.addAction(self.actionView_Meanufeter)
        self.menuDicom_to_NIFTI.addAction(self.actiontmtd_Entry_Folder)
        self.menuDicom_to_NIFTI.addAction(self.actiontmtd_Single_data)
        self.menuTo_make_Task_Dir.addAction(self.actionGenerate_Json)
        self.menuTo_make_Task_Dir.addAction(self.menuDicom_to_NIFTI.menuAction())
        self.menuTo_make_Task_Dir.addAction(self.actionRead_NIFTI)
        self.menu3D_construction.addAction(self.actionCreat_3D_Model)
        self.menu3D_construction.addAction(self.actionModel_Smoothing)
        self.menuCalculate_Differrence.addAction(self.actionSingle)
        self.menuCalculate_Differrence.addAction(self.actionBatch)
        self.menuCompare_result.addAction(self.actionView_NIFTI)
        self.menuCompare_result.addAction(self.actionView_3D_model)
        self.menuCompare_result.addAction(self.actionCalculate_Model)
        self.menuCompare_result.addAction(self.menuCalculate_Differrence.menuAction())
        self.menuCompare_result.addAction(self.actionDraw_LossImage)
        self.menuHelp.addAction(self.actionHome)
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addAction(self.actionTest)
        self.menunnU_Net.addAction(self.actionPreprocess)
        self.menunnU_Net.addAction(self.actionTrain)
        self.menunnU_Net.addAction(self.actionPredict)
        self.menuDraw_Loss_IMG.addAction(self.actionMul_txt_)
        self.menuDraw_Loss_IMG.addAction(self.actionOne_txt_)
        self.menuTXT_Process.addAction(self.menuDraw_Loss_IMG.menuAction())
        self.menuTXT_Process.addAction(self.actionCompare_Difference)
        self.menubatch_process_.addAction(self.actionS_WDA_)
        self.menubatch_process_.addAction(self.actionWDA_)
        self.menuDA.addAction(self.actionsingle_display_)
        self.menuDA.addAction(self.menubatch_process_.menuAction())
        self.menuST_Mdoel.addAction(self.actionGet_nifti_in_Folder)
        self.menuST_Mdoel.addAction(self.menuTXT_Process.menuAction())
        self.menuST_Mdoel.addAction(self.menuDA.menuAction())
        self.menuST_Mdoel.addAction(self.actionCalculate_Reliability)
        self.menuST_Mdoel.addAction(self.actionDo_it)
        self.menubar.addAction(self.menuDicom_process.menuAction())
        self.menubar.addAction(self.menuTo_make_Task_Dir.menuAction())
        self.menubar.addAction(self.menu3D_construction.menuAction())
        self.menubar.addAction(self.menuCompare_result.menuAction())
        self.menubar.addAction(self.menuST_Mdoel.menuAction())
        self.menubar.addAction(self.menunnU_Net.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Andy\'s dicom proceesing platform"))
        self.btn_cropdicom.setText(_translate("MainWindow", "Cut in Half"))
        self.btn_resampledicom.setText(_translate("MainWindow", "Resample"))
        self.btn_dicom2nii.setText(_translate("MainWindow", "Dicom to Nifti"))
        self.btn_nii2dicom.setText(_translate("MainWindow", "Nifti to Dicom"))
        self.label_dicomprocess.setText(_translate("MainWindow", "Dicom processing :"))
        self.label_6.setText(_translate("MainWindow", "View Image :"))
        self.btn_viewdicom.setText(_translate("MainWindow", "Dicom IMG."))
        self.btn_viewnii.setText(_translate("MainWindow", "Nifti IMG."))
        self.label_3Dmodel.setText(_translate("MainWindow", "Display 3D Model :"))
        self.btn_3d_reconstruction.setText(_translate("MainWindow", "3D Reconstruction"))
        self.btn_openmodel.setText(_translate("MainWindow", "Open File"))
        self.btn_smooth.setText(_translate("MainWindow", "Model Smoothing"))
        self.enteroutput_3D.setText(_translate("MainWindow", "Path of Save Model"))
        self.btn_model.setText(_translate("MainWindow", "..."))
        self.set_smooth_level.setText(_translate("MainWindow", "Smoothing Level"))
        self.smooth_level.setText(_translate("MainWindow", "0"))
        self.btn_go_predict.setText(_translate("MainWindow", "Start Predict"))
        self.btn_imagets.setText(_translate("MainWindow", "..."))
        self.btn_inferstr.setText(_translate("MainWindow", "..."))
        self.enterimagets.setText(_translate("MainWindow", "Path of Input Folder"))
        self.enteroutput.setText(_translate("MainWindow", "Path of Output Folder"))
        self.checkBox_smooth_model.setText(_translate("MainWindow", "  Model Smoothing"))
        self.checkBox_fill_holes.setText(_translate("MainWindow", "     Fill Model Hole"))
        self.checkBox_generate_model.setText(_translate("MainWindow", "   Save Model (.stl)"))
        self.btn_close_dcm.setText(_translate("MainWindow", "Close"))
        self.value_window.setText(_translate("MainWindow", "0"))
        self.value_level.setText(_translate("MainWindow", "0"))
        self.label_window.setText(_translate("MainWindow", "Window："))
        self.label_level.setText(_translate("MainWindow", "Level："))
        self.current_Threshold.setText(_translate("MainWindow", "Threshold"))
        self.threshold.setText(_translate("MainWindow", "0"))
        self.btn_add_dcm_seg.setText(_translate("MainWindow", "Add Seg. IMG."))
        self.btn_get_3dmodel.setText(_translate("MainWindow", "3D Reconstruction "))
        self.btn_display_single_slice.setText(_translate("MainWindow", "Single Slice"))
        self.btn_close_vtk.setText(_translate("MainWindow", "CLOSE"))
        self.btn_exchange_model.setText(_translate("MainWindow", "Choose Other Result"))
        self.btn_add_model.setText(_translate("MainWindow", "Compare Mode"))
        self.btn_overlap.setText(_translate("MainWindow", "Overlap"))
        self.btn_new_model.setText(_translate("MainWindow", "Add Other Model"))
        self.current_slice_2.setText(_translate("MainWindow", "Current Opacity"))
        self.opacity_level.setText(_translate("MainWindow", "0"))
        self.checkBox_smooth.setText(_translate("MainWindow", "smooth"))
        self.checkBox_hole.setText(_translate("MainWindow", "file hole"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_label), _translate("MainWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_cmdlabel), _translate("MainWindow", "Tab 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_vtkwidget), _translate("MainWindow", "頁面"))
        self.label_1.setText(_translate("MainWindow", "STL Folder of Manual Seg."))
        self.label_2.setText(_translate("MainWindow", "STL Folder of DL Seg."))
        self.label_3.setText(_translate("MainWindow", "Open Excel to show result?"))
        self.btn_openexcel.setText(_translate("MainWindow", "Yes"))
        self.btn_home.setText(_translate("MainWindow", "NO, Back to Home"))
        self.btn_calculate.setText(_translate("MainWindow", "Calculate the precision "))
        self.checkBox_save_excel.setText(_translate("MainWindow", "Save the result to Excel ?"))
        self.label_4.setText(_translate("MainWindow", "Save as Excel"))
        self.btn_manual_path.setText(_translate("MainWindow", "..."))
        self.btn_predict_path.setText(_translate("MainWindow", "..."))
        self.btn_save_path.setText(_translate("MainWindow", "..."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_process), _translate("MainWindow", "頁面"))
        self.label_slider_3d.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">     3D model</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_dicom), _translate("MainWindow", "頁面"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_dicom_zoom), _translate("MainWindow", "頁面"))
        self.btn_pseudo_path.setText(_translate("MainWindow", "..."))
        self.btn_calculate_reliablity.setText(_translate("MainWindow", "Calculate Reliability"))
        self.label_7.setText(_translate("MainWindow", "NiFti data of Pseudo label"))
        self.label_8.setText(_translate("MainWindow", "NiFti data of Ground Turth"))
        self.btn_gt_path.setText(_translate("MainWindow", "..."))
        self.btn_save_top_data.setText(_translate("MainWindow", "Take Out Those Data"))
        self.label_12.setText(_translate("MainWindow", "Output Folder :"))
        self.btn_save_reliability_data_path.setText(_translate("MainWindow", "..."))
        self.btn_mean_reliability.setText(_translate("MainWindow", "Better than S"))
        self.label_9.setText(_translate("MainWindow", "S :"))
        self.btn_log_reliability.setText(_translate("MainWindow", "Log Reliability"))
        self.btn_clear_reliability.setText(_translate("MainWindow", "Clear"))
        self.btn_top_persent.setText(_translate("MainWindow", "Select Top ()%"))
        self.label_15.setText(_translate("MainWindow", "%"))
        self.label_16.setText(_translate("MainWindow", "Auto Select :"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_reliablity), _translate("MainWindow", "頁面"))
        self.btn_get_checkpoint.setText(_translate("MainWindow", "Get Checkpoint"))
        self.btn_result_folder.setText(_translate("MainWindow", "..."))
        self.label_11.setText(_translate("MainWindow", "Result folder of nnU-Net"))
        self.label_10.setText(_translate("MainWindow", "Checkpoint Path:"))
        self.btn_checkpointpredict.setText(_translate("MainWindow", "Inference"))
        self.label_13.setText(_translate("MainWindow", "Output Path:"))
        self.btn_checkpoint_output_path.setText(_translate("MainWindow", "..."))
        self.btn_to_calculate_reliability.setText(_translate("MainWindow", "Calculate Reliability"))
        self.btn_checkpoint_input_path.setText(_translate("MainWindow", "..."))
        self.label_14.setText(_translate("MainWindow", "Input Path:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_usecheckpoint), _translate("MainWindow", "頁面"))
        self.label_5.setText(_translate("MainWindow", "Andy"))
        self.menuDicom_process.setTitle(_translate("MainWindow", "Dicom process"))
        self.menuresample.setTitle(_translate("MainWindow", "Resample"))
        self.menuFormat_converter.setTitle(_translate("MainWindow", "Format converter"))
        self.menuDicom_to_NIFTI_2.setTitle(_translate("MainWindow", "Dicom to NIFTI"))
        self.menuNIFTI_to_Dicom.setTitle(_translate("MainWindow", "NIFTI to Dicom"))
        self.menuTo_make_Task_Dir.setTitle(_translate("MainWindow", "To make Task Dir"))
        self.menuDicom_to_NIFTI.setTitle(_translate("MainWindow", "Dicom to NIFTI"))
        self.menu3D_construction.setTitle(_translate("MainWindow", "3D Construction"))
        self.menuCompare_result.setTitle(_translate("MainWindow", "Compare Result"))
        self.menuCalculate_Differrence.setTitle(_translate("MainWindow", "Calculate Differrence"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menunnU_Net.setTitle(_translate("MainWindow", "nnU-Net"))
        self.menuST_Mdoel.setTitle(_translate("MainWindow", "ST++ Mdoel"))
        self.menuTXT_Process.setTitle(_translate("MainWindow", "TXT Process"))
        self.menuDraw_Loss_IMG.setTitle(_translate("MainWindow", "Draw Loss IMG."))
        self.menuDA.setTitle(_translate("MainWindow", "Data Augmentation"))
        self.menubatch_process_.setTitle(_translate("MainWindow", "Batch process"))
        self.actionhalf.setText(_translate("MainWindow", "half"))
        self.action1_3.setText(_translate("MainWindow", "1/3"))
        self.action1_4.setText(_translate("MainWindow", "1/4"))
        self.actioncorp.setText(_translate("MainWindow", "Corp"))
        self.actionGenerate_Json.setText(_translate("MainWindow", "Generate Json"))
        self.actionRead_NIFTI.setText(_translate("MainWindow", "Read NIFTI"))
        self.actiontmtd_Entry_Folder.setText(_translate("MainWindow", "Entry Folder"))
        self.actiontmtd_Single_data.setText(_translate("MainWindow", "Single Data"))
        self.actionDP_D2N_Entry_Folder.setText(_translate("MainWindow", "Entry Folder"))
        self.actionDP_D2N_Single_Data.setText(_translate("MainWindow", "Single Data"))
        self.actionDP_N2D_Entry_Folder.setText(_translate("MainWindow", "Entry Folder"))
        self.actionDP_N2D_Single_Data.setText(_translate("MainWindow", "Single Data"))
        self.actionCreat_3D_Model.setText(_translate("MainWindow", "Create 3D Model"))
        self.actionModel_Smoothing.setText(_translate("MainWindow", "Model Smoothing"))
        self.actionView_Meanufeter.setText(_translate("MainWindow", "View Manufacturer"))
        self.actionView_NIFTI.setText(_translate("MainWindow", "View NIFTI"))
        self.actionDraw_LossImage.setText(_translate("MainWindow", "Draw LossImage"))
        self.actionHome.setText(_translate("MainWindow", "Home"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionTest.setText(_translate("MainWindow", "Test"))
        self.actionPreprocess.setText(_translate("MainWindow", "Preprocess"))
        self.actionTrain.setText(_translate("MainWindow", "Train"))
        self.actionPredict.setText(_translate("MainWindow", "Predict"))
        self.actionView_3D_model.setText(_translate("MainWindow", "View 3D model"))
        self.actionCalculate_Model.setText(_translate("MainWindow", "Calculate Model"))
        self.actionSingle.setText(_translate("MainWindow", "Single"))
        self.actionBatch.setText(_translate("MainWindow", "Batch"))
        self.actionDisplay_Dicom.setText(_translate("MainWindow", "Display Dicom"))
        self.actionsingle_display.setText(_translate("MainWindow", "single display"))
        self.actionS_WDA.setText(_translate("MainWindow", "S(WDA)"))
        self.actionWDA.setText(_translate("MainWindow", "WDA"))
        self.actionMul_txt.setText(_translate("MainWindow", "Mul .txt"))
        self.actionOne_txt.setText(_translate("MainWindow", "One .txt"))
        self.actionGet_nifti_in_Folder.setText(_translate("MainWindow", "Get nifti in Folder"))
        self.actionMul_txt_.setText(_translate("MainWindow", "Mul .txt"))
        self.actionOne_txt_.setText(_translate("MainWindow", "One .txt"))
        self.actionsingle_display_.setText(_translate("MainWindow", "Single display"))
        self.actionS_WDA_.setText(_translate("MainWindow", "S(WDA)"))
        self.actionWDA_.setText(_translate("MainWindow", "WDA"))
        self.actionCalculate_Reliability.setText(_translate("MainWindow", "Calculate Reliability"))
        self.actionTrain_Loss.setText(_translate("MainWindow", "Train Loss"))
        self.actionValidation_Loss.setText(_translate("MainWindow", "Validation Loss"))
        self.actionDice_Score.setText(_translate("MainWindow", "Dice Score"))
        self.actionCompare_Difference.setText(_translate("MainWindow", "Compare Difference"))
        self.actionDo_it.setText(_translate("MainWindow", "Do it"))
